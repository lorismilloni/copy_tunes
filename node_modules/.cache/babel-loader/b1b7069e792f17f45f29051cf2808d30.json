{"ast":null,"code":"var _jsxFileName = \"/home/lorismilloni/Repos/copy_tunes/src/pages/Search.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport AlbumInfo from '../components/AlbumInfo';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Search extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        searchInput: target.value\n      }, this.validateButton);\n    };\n\n    this.validateButton = () => {\n      const MIN_VALUE = 2;\n      const {\n        searchInput\n      } = this.state;\n\n      if (searchInput.length >= MIN_VALUE) {\n        this.setState({\n          searchButton: false\n        });\n      } else {\n        this.setState({\n          searchButton: true\n        });\n      }\n    };\n\n    this.handleAlbumSearch = async () => {\n      this.setState({\n        loading: true,\n        albumFound: false\n      });\n      const {\n        searchInput\n      } = this.state;\n      this.setState({\n        searchInput: ''\n      });\n      const albumsArray = await searchAlbumsAPI(searchInput);\n      this.setState({\n        loading: false,\n        albumFound: true,\n        albums: albumsArray,\n        artist: searchInput\n      });\n    };\n\n    this.state = {\n      searchInput: '',\n      searchButton: true,\n      loading: false,\n      albumFound: false,\n      albums: [],\n      artist: ''\n    };\n  }\n\n  render() {\n    const {\n      searchButton,\n      searchInput,\n      loading,\n      albumFound,\n      albums,\n      artist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"page-search\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"box\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchInput,\n            onChange: this.handleChange,\n            \"data-testid\": \"search-artist-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: searchButton,\n            onClick: this.handleAlbumSearch,\n            \"data-testid\": \"search-artist-button\",\n            children: \"Pesquisar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), albumFound && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [albums.length ? /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: `Resultado de álbuns de: ${artist}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Nenhum \\xE1lbum foi encontrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: albums.map(album => /*#__PURE__*/_jsxDEV(AlbumInfo, { ...album\n            }, album.collectionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n} // requisito 5 feito com ajuda da Yasmim Matos\n// o requisito 6, com a função handleAlbumSearch, bem como seus estados e o componente AlbumInfo foi feito seguindo o PR do Leonardo Vogel","map":{"version":3,"sources":["/home/lorismilloni/Repos/copy_tunes/src/pages/Search.jsx"],"names":["React","Header","Loading","AlbumInfo","searchAlbumsAPI","Search","Component","constructor","handleChange","target","setState","searchInput","value","validateButton","MIN_VALUE","state","length","searchButton","handleAlbumSearch","loading","albumFound","albumsArray","albums","artist","render","map","album","collectionId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport AlbumInfo from '../components/AlbumInfo';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\n\nexport default class Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchInput: '',\n      searchButton: true,\n      loading: false,\n      albumFound: false,\n      albums: [],\n      artist: '',\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      searchInput: target.value,\n    }, this.validateButton);\n  }\n\n  validateButton = () => {\n    const MIN_VALUE = 2;\n    const { searchInput } = this.state;\n    if (searchInput.length >= MIN_VALUE) {\n      this.setState({ searchButton: false });\n    } else {\n      this.setState({ searchButton: true });\n    }\n  }\n\n  handleAlbumSearch = async () => {\n    this.setState({ loading: true, albumFound: false });\n    const { searchInput } = this.state;\n    this.setState({ searchInput: '' });\n\n    const albumsArray = await searchAlbumsAPI(searchInput);\n\n    this.setState({\n      loading: false,\n      albumFound: true,\n      albums: albumsArray,\n      artist: searchInput,\n    });\n  }\n\n  render() {\n    const {\n      searchButton,\n      searchInput,\n      loading,\n      albumFound,\n      albums,\n      artist,\n    } = this.state;\n\n    return (\n      <>\n        <div data-testid=\"page-search\">\n          <Header />\n        </div>\n        <div class=\"box\">\n          { loading ? <Loading /> : (\n            <form>\n              <input\n                type=\"text\"\n                value={ searchInput }\n                onChange={ this.handleChange }\n                data-testid=\"search-artist-input\"\n              />\n              <button\n                type=\"submit\"\n                disabled={ searchButton }\n                onClick={ this.handleAlbumSearch }\n                data-testid=\"search-artist-button\"\n              >\n                Pesquisar\n              </button>\n            </form>)}\n          { albumFound && (\n            <section>\n              { albums.length ? <h4>{`Resultado de álbuns de: ${artist}`}</h4> : (\n                <h4>Nenhum álbum foi encontrado</h4>) }\n              <section>\n                { albums.map((album) => (\n                  <AlbumInfo key={ album.collectionId } { ...album } />\n                ))}\n              </section>\n            </section>\n          )}\n\n        </div>\n      </>\n    );\n  }\n}\n\n// requisito 5 feito com ajuda da Yasmim Matos\n// o requisito 6, com a função handleAlbumSearch, bem como seus estados e o componente AlbumInfo foi feito seguindo o PR do Leonardo Vogel\n"]},"metadata":{},"sourceType":"module"}