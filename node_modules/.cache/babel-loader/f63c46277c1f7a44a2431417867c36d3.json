{"ast":null,"code":"var _jsxFileName = \"/home/lorismilloni/Repos/copy_tunes/src/pages/Login.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        userName: target.value\n      }, this.validateButton);\n    };\n\n    this.validateButton = () => {\n      const MIN_LENGTH = 3;\n      const {\n        userName\n      } = this.state;\n\n      if (userName.length >= MIN_LENGTH) {\n        this.setState({\n          disableButton: false\n        });\n      } else {\n        this.setState({\n          disableButton: true\n        });\n      }\n    };\n\n    this.onClickButton = async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        userName\n      } = this.state;\n      await createUser({\n        name: userName\n      });\n      this.setState({\n        redirectToPage: true,\n        loading: false\n      });\n    };\n\n    this.state = {\n      userName: '',\n      disableButton: true,\n      redirectToPage: false,\n      loading: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  // quando o botão de login é clicado, essa função é chamada, e seta o estado de loading como true, liberando o componente <Loading /> no render, após isso a função createUser() será chamada de modo assíncrono, e após o retorno o loading volta para false, e não renderiza mais o componente loading, e muda o estado de logged para true, redirecionando para a próxima página\n  render() {\n    const {\n      disableButton,\n      redirectToPage,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"columns box\",\n        \"data-testid\": \"page-login\",\n        children: [redirectToPage && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column is-narrow field\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"control\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"input is-primary is-large is-rounded\",\n                \"data-testid\": \"login-name-input\",\n                type: \"text\",\n                placeholder: \"Nome de usu\\xE1rio\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"button is-dark is-medium is-responsive is-outlined is-fullwidth\",\n              \"data-testid\": \"login-submit-button\",\n              type: \"submit\",\n              disabled: disableButton,\n              onClick: this.onClickButton,\n              children: \"Entrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/lorismilloni/Repos/copy_tunes/src/pages/Login.jsx"],"names":["React","Redirect","createUser","Loading","Login","Component","constructor","handleChange","target","setState","userName","value","validateButton","MIN_LENGTH","state","length","disableButton","onClickButton","loading","name","redirectToPage","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      userName: '',\n      disableButton: true,\n      redirectToPage: false,\n      loading: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ userName: target.value }, this.validateButton);\n  }\n  // a handleChange vai atualizar o username no estado com o que foi digitado no campo, e vai ao final chamar a função que faz a validação para liberar o botão de login\n\n  validateButton = () => {\n    const MIN_LENGTH = 3;\n    const { userName } = this.state;\n    if (userName.length >= MIN_LENGTH) {\n      this.setState({ disableButton: false });\n    } else {\n      this.setState({ disableButton: true });\n    }\n  }\n  // a função validateButton fará a validação do botão de login, se tiver mais que três caracteres ele será habilitado\n\n  onClickButton = async () => {\n    this.setState({ loading: true });\n    const { userName } = this.state;\n    await createUser({ name: userName });\n    this.setState({ redirectToPage: true, loading: false });\n  }\n  // quando o botão de login é clicado, essa função é chamada, e seta o estado de loading como true, liberando o componente <Loading /> no render, após isso a função createUser() será chamada de modo assíncrono, e após o retorno o loading volta para false, e não renderiza mais o componente loading, e muda o estado de logged para true, redirecionando para a próxima página\n\n  render() {\n    const { disableButton, redirectToPage, loading } = this.state;\n    return (\n      <>\n      <div class=\"columns box\" data-testid=\"page-login\">\n        {redirectToPage && <Redirect to=\"/search\" />}\n        <div class=\"column\"></div>\n        {loading ? <Loading /> : (\n          <div class=\"column is-narrow field\">\n            <form>\n              <div class=\"control\">\n                <input\n                  class=\"input is-primary is-large is-rounded\"\n                  data-testid=\"login-name-input\"\n                  type=\"text\"\n                  placeholder=\"Nome de usuário\"\n                  onChange={this.handleChange} />\n              </div>\n              <button\n                class=\"button is-dark is-medium is-responsive is-outlined is-fullwidth\"\n                data-testid=\"login-submit-button\"\n                type=\"submit\"\n                disabled={disableButton}\n                onClick={this.onClickButton}\n              >\n                Entrar\n              </button>\n            </form>\n          </div>\n        )}\n      <div class=\"column\"></div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}